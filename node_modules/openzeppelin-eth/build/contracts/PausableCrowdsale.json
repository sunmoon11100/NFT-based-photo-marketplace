{
  "contractName": "PausableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061152c806100206000396000f3fe6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100db5780633f4ba83a146101065780634042b66f1461011d57806346fbf68e14610148578063521eb273146101b15780635c975abb146102085780636ef8d66d146102375780638129fc1c1461024e57806382dc1ec4146102655780638456cb59146102b6578063b4988fd0146102cd578063c4d66de814610348578063ec8ac4d814610399578063fc0c546a146103dd575b6100d933610434565b005b3480156100e757600080fd5b506100f061052c565b6040518082815260200191505060405180910390f35b34801561011257600080fd5b5061011b610536565b005b34801561012957600080fd5b506101326105e5565b6040518082815260200191505060405180910390f35b34801561015457600080fd5b506101976004803603602081101561016b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ef565b604051808215151515815260200191505060405180910390f35b3480156101bd57600080fd5b506101c661060c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610636565b604051808215151515815260200191505060405180910390f35b34801561024357600080fd5b5061024c61064d565b005b34801561025a57600080fd5b50610263610658565b005b34801561027157600080fd5b506102b46004803603602081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610795565b005b3480156102c257600080fd5b506102cb6107b5565b005b3480156102d957600080fd5b50610346600480360360608110156102f057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610865565b005b34801561035457600080fd5b506103976004803603602081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aad565b005b6103db600480360360208110156103af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610434565b005b3480156103e957600080fd5b506103f2610bfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160336000828254019250508190555060006033549050600034905061045b8382610c26565b600061046682610c50565b905061047d82606954610c6e90919063ffffffff16565b60698190555061048d8482610c8f565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105048483610c9d565b61050c610ca1565b6105168483610d0c565b50506033548114151561052857600080fd5b5050565b6000606854905090565b61053f336105ef565b151561054a57600080fd5b60cf60009054906101000a900460ff16151561056557600080fd5b600060cf60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000606954905090565b600061060582609c610d1090919063ffffffff16565b9050919050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060cf60009054906101000a900460ff16905090565b61065633610da4565b565b600060019054906101000a900460ff16806106775750610676610dfe565b5b8061068e57506000809054906101000a900460ff16155b1515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b61079e336105ef565b15156107a957600080fd5b6107b281610e0f565b50565b6107be336105ef565b15156107c957600080fd5b60cf60009054906101000a900460ff161515156107e557600080fd5b600160cf60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff16806108845750610883610dfe565b5b8061089b57506000809054906101000a900460ff16155b1515610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561098c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109c857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a0457600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b600060019054906101000a900460ff1680610acc5750610acb610dfe565b5b80610ae357506000809054906101000a900460ff16155b1515610b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610bcd610e69565b1515610bd557fe5b610bde82610f2b565b80600060016101000a81548160ff0219169083151502179055505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cf60009054906101000a900460ff16151515610c4257600080fd5b610c4c8282611085565b5050565b6000610c67606854836110d590919063ffffffff16565b9050919050565b6000808284019050838110151515610c8557600080fd5b8091505092915050565b610c998282611113565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d09573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d4d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610db881609c61116490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600080303b90506000811491505090565b610e2381609c61121390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080606854118015610ecb5750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610f265750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600060019054906101000a900460ff1680610f4a5750610f49610dfe565b5b80610f6157506000809054906101000a900460ff16155b1515610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555061104c826112c3565b600060cf60006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110c157600080fd5b600081141515156110d157600080fd5b5050565b6000808314156110e8576000905061110d565b600082840290508284828115156110fb57fe5b0414151561110857600080fd5b809150505b92915050565b6111608282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114129092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111a057600080fd5b6111aa8282610d10565b15156111b557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561124f57600080fd5b6112598282610d10565b15151561126557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806112e257506112e1610dfe565b5b806112f957506000809054906101000a900460ff16155b1515611393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113e4826105ef565b15156113f4576113f382610e0f565b5b80600060016101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156114b557600080fd5b505af11580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b810190808051906020019092919050505015156114fb57600080fd5b50505056fea165627a7a72305820e020818b98ce507c0be4cc8a6a6a3f22440e4399790012e635c42dc0a7dc87730029",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e146100db5780633f4ba83a146101065780634042b66f1461011d57806346fbf68e14610148578063521eb273146101b15780635c975abb146102085780636ef8d66d146102375780638129fc1c1461024e57806382dc1ec4146102655780638456cb59146102b6578063b4988fd0146102cd578063c4d66de814610348578063ec8ac4d814610399578063fc0c546a146103dd575b6100d933610434565b005b3480156100e757600080fd5b506100f061052c565b6040518082815260200191505060405180910390f35b34801561011257600080fd5b5061011b610536565b005b34801561012957600080fd5b506101326105e5565b6040518082815260200191505060405180910390f35b34801561015457600080fd5b506101976004803603602081101561016b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105ef565b604051808215151515815260200191505060405180910390f35b3480156101bd57600080fd5b506101c661060c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610636565b604051808215151515815260200191505060405180910390f35b34801561024357600080fd5b5061024c61064d565b005b34801561025a57600080fd5b50610263610658565b005b34801561027157600080fd5b506102b46004803603602081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610795565b005b3480156102c257600080fd5b506102cb6107b5565b005b3480156102d957600080fd5b50610346600480360360608110156102f057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610865565b005b34801561035457600080fd5b506103976004803603602081101561036b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aad565b005b6103db600480360360208110156103af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610434565b005b3480156103e957600080fd5b506103f2610bfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160336000828254019250508190555060006033549050600034905061045b8382610c26565b600061046682610c50565b905061047d82606954610c6e90919063ffffffff16565b60698190555061048d8482610c8f565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105048483610c9d565b61050c610ca1565b6105168483610d0c565b50506033548114151561052857600080fd5b5050565b6000606854905090565b61053f336105ef565b151561054a57600080fd5b60cf60009054906101000a900460ff16151561056557600080fd5b600060cf60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000606954905090565b600061060582609c610d1090919063ffffffff16565b9050919050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060cf60009054906101000a900460ff16905090565b61065633610da4565b565b600060019054906101000a900460ff16806106775750610676610dfe565b5b8061068e57506000809054906101000a900460ff16155b1515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b61079e336105ef565b15156107a957600080fd5b6107b281610e0f565b50565b6107be336105ef565b15156107c957600080fd5b60cf60009054906101000a900460ff161515156107e557600080fd5b600160cf60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600060019054906101000a900460ff16806108845750610883610dfe565b5b8061089b57506000809054906101000a900460ff16155b1515610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561098c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156109c857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a0457600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b600060019054906101000a900460ff1680610acc5750610acb610dfe565b5b80610ae357506000809054906101000a900460ff16155b1515610b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610bcd610e69565b1515610bd557fe5b610bde82610f2b565b80600060016101000a81548160ff0219169083151502179055505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cf60009054906101000a900460ff16151515610c4257600080fd5b610c4c8282611085565b5050565b6000610c67606854836110d590919063ffffffff16565b9050919050565b6000808284019050838110151515610c8557600080fd5b8091505092915050565b610c998282611113565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d09573d6000803e3d6000fd5b50565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d4d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610db881609c61116490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600080303b90506000811491505090565b610e2381609c61121390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080606854118015610ecb5750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015610f265750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600060019054906101000a900460ff1680610f4a5750610f49610dfe565b5b80610f6157506000809054906101000a900460ff16155b1515610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555061104c826112c3565b600060cf60006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110c157600080fd5b600081141515156110d157600080fd5b5050565b6000808314156110e8576000905061110d565b600082840290508284828115156110fb57fe5b0414151561110857600080fd5b809150505b92915050565b6111608282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114129092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111a057600080fd5b6111aa8282610d10565b15156111b557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561124f57600080fd5b6112598282610d10565b15151561126557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806112e257506112e1610dfe565b5b806112f957506000809054906101000a900460ff16155b1515611393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113e4826105ef565b15156113f4576113f382610e0f565b5b80600060016101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156114b557600080fd5b505af11580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b810190808051906020019092919050505015156114fb57600080fd5b50505056fea165627a7a72305820e020818b98ce507c0be4cc8a6a6a3f22440e4399790012e635c42dc0a7dc87730029",
  "sourceMap": "278:811:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:811:17;;;;;;;",
  "deployedSourceMap": "278:811:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:21:7;2965:10;2955:9;:21::i;:::-;278:811:17;3366:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3366:75:7;;;;;;;;;;;;;;;;;;;;;;;1308:115:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:115:31;;;;;;3504:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3504:85:7;;;;;;;;;;;;;;;;;;;;;;;533:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3194:87:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3194:87:7;;;;;;;;;;;;;;;;;;;;;;;;;;;592:76:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;592:76:31;;;;;;;;;;;;;;;;;;;;;;;;;;;742:75:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:3;;;;;;451:214:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:214:68;;;;;;646:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:3;;;;;;;;;;;;;;;;;;;;;;1105:113:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1105:113:31;;;;;;2344:284:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2344:284:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2344:284:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:149:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:149:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;349:149:17;;;;;;;;;;;;;;;;;;;;;;3846:603:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3846:603:7;;;;;;;;;;;;;;;;;;;;;;3042:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3042:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:603;1091:1:68;1074:13;;:18;;;;;;;;;;;1102:20;1125:13;;1102:36;;3924:17:7;3944:9;3924:29;;3963:44;3984:11;3997:9;3963:20;:44::i;:::-;4066:14;4083:26;4099:9;4083:15;:26::i;:::-;4066:43;;4157:25;4172:9;4157:10;;:14;;:25;;;;:::i;:::-;4144:10;:38;;;;4193:37;4210:11;4223:6;4193:16;:37::i;:::-;4273:11;4245:59;;4261:10;4245:59;;;4286:9;4297:6;4245:59;;;;;;;;;;;;;;;;;;;;;;;;4315:46;4338:11;4351:9;4315:22;:46::i;:::-;4372:15;:13;:15::i;:::-;4397:45;4419:11;4432:9;4397:21;:45::i;:::-;1148:1:68;;1183:13;;1167:12;:29;1159:38;;;;;;;;3846:603:7;;:::o;3366:75::-;3403:7;3429:5;;3422:12;;3366:75;:::o;1308:115:31:-;488:20:3;497:10;488:8;:20::i;:::-;480:29;;;;;;;;992:7:31;;;;;;;;;;;984:16;;;;;;;;1376:5;1366:7;;:15;;;;;;;;;;;;;;;;;;1396:20;1405:10;1396:20;;;;;;;;;;;;;;;;;;;;;;1308:115::o;3504:85:7:-;3546:7;3572:10;;3565:17;;3504:85;:::o;533:107:3:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;3194:87:7:-;3233:15;3267:7;;;;;;;;;;;3260:14;;3194:87;:::o;592:76:31:-;631:4;654:7;;;;;;;;;;;647:14;;592:76;:::o;742:75:3:-;785:25;799:10;785:13;:25::i;:::-;742:75::o;451:214:68:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;657:1:68;641:13;:17;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;451:214:68;:::o;646:90:3:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;1105:113:31:-;488:20:3;497:10;488:8;:20::i;:::-;480:29;;;;;;;;821:7:31;;;;;;;;;;;820:8;812:17;;;;;;;;1174:4;1164:7;;:14;;;;;;;;;;;;;;;;;;1193:18;1200:10;1193:18;;;;;;;;;;;;;;;;;;;;;;1105:113::o;2344:284:7:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;2460:1:7;2453:4;:8;2445:17;;;;;;;;2498:1;2480:20;;:6;:20;;;;2472:29;;;;;;;;2545:1;2519:28;;2527:5;2519:28;;;;2511:37;;;;;;;;2567:4;2559:5;:12;;;;2591:6;2581:7;;:16;;;;;;;;;;;;;;;;;;2616:5;2607:6;;:14;;;;;;;;;;;;;;;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;2344:284:7;;;;:::o;349:149:17:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;421:31:17;:29;:31::i;:::-;414:39;;;;;;464:27;484:6;464:19;:27::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;349:149:17;;:::o;3042:76:7:-;3080:6;3105;;;;;;;;;;;3098:13;;3042:76;:::o;875:176:17:-;821:7:31;;;;;;;;;;;820:8;812:17;;;;;;;;992:52:17;1019:12;1033:10;992:26;:52::i;:::-;875:176;;:::o;7249:120:7:-;7316:7;7342:20;7356:5;;7342:9;:13;;:20;;;;:::i;:::-;7335:27;;7249:120;;;:::o;1431:145:33:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6451:134:7:-;6538:40;6553:11;6566;6538:14;:40::i;:::-;6451:134;;:::o;6855:145::-;;;:::o;7456:78::-;7500:7;;;;;;;;;;;:16;;:27;7517:9;7500:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7500:27:7;7456:78::o;5619:149::-;;;:::o;786:162:0:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;948:127:3:-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;1349:467:69:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;823:119:3:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;4455:159:7:-;4509:4;4542:1;4534:5;;:9;4533:38;;;;;4568:1;4549:21;;:7;;;;;;;;;;;:21;;;;4533:38;:73;;;;;4603:1;4576:29;;4584:6;;;;;;;;;;;4576:29;;;;4533:73;4525:82;;4455:159;:::o;379:127:31:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;444:29:31;466:6;444:21;:29::i;:::-;494:5;484:7;;:15;;;;;;;;;;;;;;;;;;1243::69;1228:12;;:30;;;;;;;;;;;;;;;;;;379:127:31;;:::o;5156:168:7:-;5281:1;5258:25;;:11;:25;;;;5250:34;;;;;;;;5315:1;5302:9;:14;;5294:23;;;;;;;;5156:168;;:::o;229:421:33:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o;6048:137:7:-;6133:45;6153:11;6166;6133:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6048:137;;:::o;514:184:0:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;305:137:3:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:3;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:3;;:::o;409:123:48:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:48;;;;;;;;;;;;;;;;491:34;;;;;;;;409:123;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\n\nimport \"../Crowdsale.sol\";\nimport \"../../lifecycle/Pausable.sol\";\n\n/**\n * @title PausableCrowdsale\n * @dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.\n */\ncontract PausableCrowdsale is Initializable, Crowdsale, Pausable {\n    function initialize(address sender) public initializer {\n        assert(Crowdsale._hasBeenInitialized());\n\n        Pausable.initialize(sender);\n    }\n\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use super to concatenate validations.\n     * Adds the validation that the crowdsale must not be paused.\n     * @param _beneficiary Address performing the token purchase\n     * @param _weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view whenNotPaused {\n        return super._preValidatePurchase(_beneficiary, _weiAmount);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/validation/PausableCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        2024
      ]
    },
    "id": 2025,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1974,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1975,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 8038,
        "src": "25:45:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 1976,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 1123,
        "src": "72:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 1977,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 3715,
        "src": "99:38:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1978,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "308:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1979,
            "nodeType": "InheritanceSpecifier",
            "src": "308:13:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1980,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1122,
              "src": "323:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1122",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1981,
            "nodeType": "InheritanceSpecifier",
            "src": "323:9:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1982,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "334:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$3714",
                "typeString": "contract Pausable"
              }
            },
            "id": 1983,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:17"
          }
        ],
        "contractDependencies": [
          450,
          1122,
          3714,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": true,
        "id": 2024,
        "linearizedBaseContracts": [
          2024,
          3714,
          450,
          1122,
          7981,
          8037
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "404:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1991,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "421:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1122_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1027,
                          "src": "421:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "421:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1990,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "414:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "414:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1999,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "484:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1996,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3714,
                        "src": "464:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$3714_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3650,
                      "src": "464:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "464:27:17"
                }
              ]
            },
            "documentation": null,
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1988,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1987,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8018,
                  "src": "392:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "392:11:17"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "369:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "368:16:17"
            },
            "returnParameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:17"
            },
            "scope": 2024,
            "src": "349:149:17",
            "stateMutability": "nonpayable",
            "superFunction": 3650,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2018,
              "nodeType": "Block",
              "src": "975:76:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2014,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2005,
                        "src": "1019:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2015,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2007,
                        "src": "1033:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2012,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8128,
                        "src": "992:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$2024",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "992:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 2011,
                  "id": 2017,
                  "nodeType": "Return",
                  "src": "985:59:17"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 2019,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2009,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3667,
                  "src": "961:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "961:13:17"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "905:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2007,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "927:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:42:17"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:17"
            },
            "scope": 2024,
            "src": "875:176:17",
            "stateMutability": "view",
            "superFunction": 1049,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2023,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2024,
            "src": "1057:29:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2020,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1057:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2022,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2021,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1065:2:17",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1057:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2025,
        "src": "278:811:17"
      }
    ],
    "src": "0:1090:17"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/validation/PausableCrowdsale.sol",
    "exportedSymbols": {
      "PausableCrowdsale": [
        2024
      ]
    },
    "id": 2025,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1974,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1975,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 8038,
        "src": "25:45:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 1976,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 1123,
        "src": "72:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/lifecycle/Pausable.sol",
        "file": "../../lifecycle/Pausable.sol",
        "id": 1977,
        "nodeType": "ImportDirective",
        "scope": 2025,
        "sourceUnit": 3715,
        "src": "99:38:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1978,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "308:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1979,
            "nodeType": "InheritanceSpecifier",
            "src": "308:13:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1980,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1122,
              "src": "323:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1122",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1981,
            "nodeType": "InheritanceSpecifier",
            "src": "323:9:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1982,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3714,
              "src": "334:8:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$3714",
                "typeString": "contract Pausable"
              }
            },
            "id": 1983,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:17"
          }
        ],
        "contractDependencies": [
          450,
          1122,
          3714,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title PausableCrowdsale\n@dev Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
        "fullyImplemented": true,
        "id": 2024,
        "linearizedBaseContracts": [
          2024,
          3714,
          450,
          1122,
          7981,
          8037
        ],
        "name": "PausableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "404:94:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1991,
                            "name": "Crowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "421:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1122_$",
                              "typeString": "type(contract Crowdsale)"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1027,
                          "src": "421:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "421:31:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1990,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "414:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1995,
                  "nodeType": "ExpressionStatement",
                  "src": "414:39:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1999,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1985,
                        "src": "484:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1996,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3714,
                        "src": "464:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$3714_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3650,
                      "src": "464:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "464:27:17"
                }
              ]
            },
            "documentation": null,
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1988,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1987,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8018,
                  "src": "392:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "392:11:17"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "369:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "368:16:17"
            },
            "returnParameters": {
              "id": 1989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:17"
            },
            "scope": 2024,
            "src": "349:149:17",
            "stateMutability": "nonpayable",
            "superFunction": 3650,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2018,
              "nodeType": "Block",
              "src": "975:76:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2014,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2005,
                        "src": "1019:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2015,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2007,
                        "src": "1033:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2012,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8128,
                        "src": "992:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_PausableCrowdsale_$2024",
                          "typeString": "contract super PausableCrowdsale"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "992:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:52:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 2011,
                  "id": 2017,
                  "nodeType": "Return",
                  "src": "985:59:17"
                }
              ]
            },
            "documentation": "@dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\nUse super to concatenate validations.\nAdds the validation that the crowdsale must not be paused.\n@param _beneficiary Address performing the token purchase\n@param _weiAmount Value in wei involved in the purchase",
            "id": 2019,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2009,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3667,
                  "src": "961:13:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "961:13:17"
              }
            ],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2005,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "905:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2007,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2019,
                  "src": "927:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:42:17"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "975:0:17"
            },
            "scope": 2024,
            "src": "875:176:17",
            "stateMutability": "view",
            "superFunction": 1049,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2023,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2024,
            "src": "1057:29:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2020,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1057:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2022,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2021,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1065:2:17",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1057:11:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2025,
        "src": "278:811:17"
      }
    ],
    "src": "0:1090:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-29T05:33:36.338Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract where purchases can be paused and unpaused by the pauser role.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "PausableCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}