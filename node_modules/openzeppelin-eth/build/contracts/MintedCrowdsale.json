{
  "contractName": "MintedCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506109cc806100206000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e1461008e5780634042b66f146100b9578063521eb273146100e45780638129fc1c1461013b578063b4988fd014610152578063ec8ac4d8146101cd578063fc0c546a14610211575b61008c33610268565b005b34801561009a57600080fd5b506100a3610360565b6040518082815260200191505060405180910390f35b3480156100c557600080fd5b506100ce61036a565b6040518082815260200191505060405180910390f35b3480156100f057600080fd5b506100f9610374565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b5061015061039e565b005b34801561015e57600080fd5b506101cb6004803603606081101561017557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104db565b005b61020f600480360360208110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610268565b005b34801561021d57600080fd5b50610226610723565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160336000828254019250508190555060006033549050600034905061028f838261074d565b600061029a8261079d565b90506102b1826069546107bb90919063ffffffff16565b6069819055506102c184826107dc565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361033884836107ea565b6103406107ee565b61034a8483610859565b50506033548114151561035c57600080fd5b5050565b6000606854905090565b6000606954905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806103bd57506103bc61085d565b5b806103d457506000809054906101000a900460ff16155b151561046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b600060019054906101000a900460ff16806104fa57506104f961085d565b5b8061051157506000809054906101000a900460ff16155b15156105ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561060257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561063e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561067a57600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561078957600080fd5b6000811415151561079957600080fd5b5050565b60006107b46068548361086e90919063ffffffff16565b9050919050565b60008082840190508381101515156107d257600080fd5b8091505092915050565b6107e682826108ac565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610856573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b60008083141561088157600090506108a6565b6000828402905082848281151561089457fe5b041415156108a157600080fd5b809150505b92915050565b6108b4610723565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b505050506040513d602081101561098057600080fd5b8101908080519060200190929190505050151561099c57600080fd5b505056fea165627a7a72305820b0823700d7947976db1b18a17f7b3e88d1cf59dd9516b9d32a0276fd510752bb0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632c4e722e1461008e5780634042b66f146100b9578063521eb273146100e45780638129fc1c1461013b578063b4988fd014610152578063ec8ac4d8146101cd578063fc0c546a14610211575b61008c33610268565b005b34801561009a57600080fd5b506100a3610360565b6040518082815260200191505060405180910390f35b3480156100c557600080fd5b506100ce61036a565b6040518082815260200191505060405180910390f35b3480156100f057600080fd5b506100f9610374565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014757600080fd5b5061015061039e565b005b34801561015e57600080fd5b506101cb6004803603606081101561017557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104db565b005b61020f600480360360208110156101e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610268565b005b34801561021d57600080fd5b50610226610723565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160336000828254019250508190555060006033549050600034905061028f838261074d565b600061029a8261079d565b90506102b1826069546107bb90919063ffffffff16565b6069819055506102c184826107dc565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361033884836107ea565b6103406107ee565b61034a8483610859565b50506033548114151561035c57600080fd5b5050565b6000606854905090565b6000606954905090565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806103bd57506103bc61085d565b5b806103d457506000809054906101000a900460ff16155b151561046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b600060019054906101000a900460ff16806104fa57506104f961085d565b5b8061051157506000809054906101000a900460ff16155b15156105ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561060257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561063e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561067a57600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561078957600080fd5b6000811415151561079957600080fd5b5050565b60006107b46068548361086e90919063ffffffff16565b9050919050565b60008082840190508381101515156107d257600080fd5b8091505092915050565b6107e682826108ac565b5050565b5050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610856573d6000803e3d6000fd5b50565b5050565b600080303b90506000811491505090565b60008083141561088157600090506108a6565b6000828402905082848281151561089457fe5b041415156108a157600080fd5b809150505b92915050565b6108b4610723565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b505050506040513d602081101561098057600080fd5b8101908080519060200190929190505050151561099c57600080fd5b505056fea165627a7a72305820b0823700d7947976db1b18a17f7b3e88d1cf59dd9516b9d32a0276fd510752bb0029",
  "sourceMap": "334:511:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:511:13;;;;;;;",
  "deployedSourceMap": "334:511:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:21:7;2965:10;2955:9;:21::i;:::-;334:511:13;3366:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3366:75:7;;;;;;;;;;;;;;;;;;;;;;;3504:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3504:85:7;;;;;;;;;;;;;;;;;;;;;;;3194:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3194:87:7;;;;;;;;;;;;;;;;;;;;;;;;;;;451:214:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:214:68;;;;;;2344:284:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2344:284:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2344:284:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:603;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3846:603:7;;;;;;;;;;;;;;;;;;;;;;3042:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3042:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:603;1091:1:68;1074:13;;:18;;;;;;;;;;;1102:20;1125:13;;1102:36;;3924:17:7;3944:9;3924:29;;3963:44;3984:11;3997:9;3963:20;:44::i;:::-;4066:14;4083:26;4099:9;4083:15;:26::i;:::-;4066:43;;4157:25;4172:9;4157:10;;:14;;:25;;;;:::i;:::-;4144:10;:38;;;;4193:37;4210:11;4223:6;4193:16;:37::i;:::-;4273:11;4245:59;;4261:10;4245:59;;;4286:9;4297:6;4245:59;;;;;;;;;;;;;;;;;;;;;;;;4315:46;4338:11;4351:9;4315:22;:46::i;:::-;4372:15;:13;:15::i;:::-;4397:45;4419:11;4432:9;4397:21;:45::i;:::-;1148:1:68;;1183:13;;1167:12;:29;1159:38;;;;;;;;3846:603:7;;:::o;3366:75::-;3403:7;3429:5;;3422:12;;3366:75;:::o;3504:85::-;3546:7;3572:10;;3565:17;;3504:85;:::o;3194:87::-;3233:15;3267:7;;;;;;;;;;;3260:14;;3194:87;:::o;451:214:68:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;657:1:68;641:13;:17;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;451:214:68;:::o;2344:284:7:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;2460:1:7;2453:4;:8;2445:17;;;;;;;;2498:1;2480:20;;:6;:20;;;;2472:29;;;;;;;;2545:1;2519:28;;2527:5;2519:28;;;;2511:37;;;;;;;;2567:4;2559:5;:12;;;;2591:6;2581:7;;:16;;;;;;;;;;;;;;;;;;2616:5;2607:6;;:14;;;;;;;;;;;;;;;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;2344:284:7;;;;:::o;3042:76::-;3080:6;3105;;;;;;;;;;;3098:13;;3042:76;:::o;5156:168::-;5281:1;5258:25;;:11;:25;;;;5250:34;;;;;;;;5315:1;5302:9;:14;;5294:23;;;;;;;;5156:168;;:::o;7249:120::-;7316:7;7342:20;7356:5;;7342:9;:13;;:20;;;;:::i;:::-;7335:27;;7249:120;;;:::o;1431:145:33:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6451:134:7:-;6538:40;6553:11;6566;6538:14;:40::i;:::-;6451:134;;:::o;6855:145::-;;;:::o;7456:78::-;7500:7;;;;;;;;;;;:16;;:27;7517:9;7500:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7500:27:7;7456:78::o;5619:149::-;;;:::o;1349:467:69:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;229:421:33:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o;571:236:13:-;759:7;:5;:7::i;:::-;737:36;;;774:11;787;737:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;737:62:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;737:62:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;737:62:13;;;;;;;;;;;;;;;;729:71;;;;;;;;571:236;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"../Crowdsale.sol\";\nimport \"../../token/ERC20/ERC20Mintable.sol\";\n\n/**\n * @title MintedCrowdsale\n * @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\n * Token ownership should be transferred to MintedCrowdsale for minting.\n */\ncontract MintedCrowdsale is Initializable, Crowdsale {\n    /**\n     * @dev Overrides delivery by minting tokens upon purchase.\n     * @param beneficiary Token purchaser\n     * @param tokenAmount Number of tokens to be minted\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {\n        // Potentially dangerous assumption about the type of the token.\n        require(ERC20Mintable(address(token())).mint(beneficiary, tokenAmount));\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/emission/MintedCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/emission/MintedCrowdsale.sol",
    "exportedSymbols": {
      "MintedCrowdsale": [
        1594
      ]
    },
    "id": 1595,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1561,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1562,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 8038,
        "src": "25:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 1563,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1123,
        "src": "71:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../../token/ERC20/ERC20Mintable.sol",
        "id": 1564,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 5484,
        "src": "98:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1565,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "362:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1566,
            "nodeType": "InheritanceSpecifier",
            "src": "362:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1567,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1122,
              "src": "377:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1122",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1568,
            "nodeType": "InheritanceSpecifier",
            "src": "377:9:13"
          }
        ],
        "contractDependencies": [
          1122,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title MintedCrowdsale\n@dev Extension of Crowdsale contract whose tokens are minted in each purchase.\nToken ownership should be transferred to MintedCrowdsale for minting.",
        "fullyImplemented": true,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          1122,
          7981,
          8037
        ],
        "name": "MintedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "646:161:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "774:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1584,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1572,
                            "src": "787:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1578,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 918,
                                      "src": "759:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5675_$",
                                        "typeString": "function () view returns (contract IERC20)"
                                      }
                                    },
                                    "id": 1579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "759:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5675",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$5675",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 1577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "751:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "751:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1576,
                              "name": "ERC20Mintable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5483,
                              "src": "737:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$5483_$",
                                "typeString": "type(contract ERC20Mintable)"
                              }
                            },
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "737:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$5483",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5478,
                          "src": "737:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "737:62:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "729:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:71:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "729:71:13"
                }
              ]
            },
            "documentation": "@dev Overrides delivery by minting tokens upon purchase.\n@param beneficiary Token purchaser\n@param tokenAmount Number of tokens to be minted",
            "id": 1589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "595:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "616:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:42:13"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:13"
            },
            "scope": 1594,
            "src": "571:236:13",
            "stateMutability": "nonpayable",
            "superFunction": 1072,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1593,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1594,
            "src": "813:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1590,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "813:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1592,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1591,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "821:2:13",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "813:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1595,
        "src": "334:511:13"
      }
    ],
    "src": "0:846:13"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/emission/MintedCrowdsale.sol",
    "exportedSymbols": {
      "MintedCrowdsale": [
        1594
      ]
    },
    "id": 1595,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1561,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1562,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 8038,
        "src": "25:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/Crowdsale.sol",
        "file": "../Crowdsale.sol",
        "id": 1563,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1123,
        "src": "71:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../../token/ERC20/ERC20Mintable.sol",
        "id": 1564,
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 5484,
        "src": "98:45:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1565,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "362:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1566,
            "nodeType": "InheritanceSpecifier",
            "src": "362:13:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1567,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1122,
              "src": "377:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1122",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1568,
            "nodeType": "InheritanceSpecifier",
            "src": "377:9:13"
          }
        ],
        "contractDependencies": [
          1122,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title MintedCrowdsale\n@dev Extension of Crowdsale contract whose tokens are minted in each purchase.\nToken ownership should be transferred to MintedCrowdsale for minting.",
        "fullyImplemented": true,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          1122,
          7981,
          8037
        ],
        "name": "MintedCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "646:161:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "774:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1584,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1572,
                            "src": "787:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1578,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 918,
                                      "src": "759:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$5675_$",
                                        "typeString": "function () view returns (contract IERC20)"
                                      }
                                    },
                                    "id": 1579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "759:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5675",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$5675",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 1577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "751:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "751:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1576,
                              "name": "ERC20Mintable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5483,
                              "src": "737:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$5483_$",
                                "typeString": "type(contract ERC20Mintable)"
                              }
                            },
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "737:31:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$5483",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5478,
                          "src": "737:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "737:62:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "729:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:71:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "729:71:13"
                }
              ]
            },
            "documentation": "@dev Overrides delivery by minting tokens upon purchase.\n@param beneficiary Token purchaser\n@param tokenAmount Number of tokens to be minted",
            "id": 1589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "595:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "616:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:42:13"
            },
            "returnParameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:13"
            },
            "scope": 1594,
            "src": "571:236:13",
            "stateMutability": "nonpayable",
            "superFunction": 1072,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1593,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1594,
            "src": "813:29:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1590,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "813:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1592,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1591,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "821:2:13",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "813:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1595,
        "src": "334:511:13"
      }
    ],
    "src": "0:846:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-29T05:33:36.336Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to MintedCrowdsale for minting.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "MintedCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}