{
  "contractName": "RefundablePostDeliveryCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "381:311:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:311:11;;;;;;;",
  "deployedSourceMap": "381:311:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:21:7;2965:10;2955:9;:21::i;:::-;381:311:11;1822:156:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1822:156:18;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3366:75:7;;;;;;;;;;;;;;;;;;;;;;;1765::10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1765:75:10;;;;;;;;;;;;;;;;;;;;;;;3504:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3504:85:7;;;;;;;;;;;;;;;;;;;;;;;1469:189:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1469:189:18;;;;;;;;;;;;;;;;;;;;;;;;;;;489:165:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:165:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;489:165:11;;;;;;;;;;;;;;;;;;;;;;1295:89:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:89:18;;;;;;;;;;;;;;;;;;;;;;;792:183:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;792:183:8;;;;;;3194:87:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3194:87:7;;;;;;;;;;;;;;;;;;;;;;;;;;;852:108:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;852:108:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;852:108:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:94:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2273:94:10;;;;;;;;;;;;;;;;;;;;;;;;;;;451:214:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:214:68;;;;;;552:82:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;552:82:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:284:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2344:284:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2344:284:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1141:89:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1141:89:18;;;;;;;;;;;;;;;;;;;;;;;1989:161:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1989:161:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1989:161:10;;;;;;;;;;;;;;;;;;;;;;718:358:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;718:358:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;718:358:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:603:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3846:603:7;;;;;;;;;;;;;;;;;;;;;;3042:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3042:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:468:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:468:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1215:468:10;;;;;;;;;;;;;;;;;;;;3846:603:7;1091:1:68;1074:13;;:18;;;;;;;;;;;1102:20;1125:13;;1102:36;;3924:17:7;3944:9;3924:29;;3963:44;3984:11;3997:9;3963:20;:44::i;:::-;4066:14;4083:26;4099:9;4083:15;:26::i;:::-;4066:43;;4157:25;4172:9;4157:10;;:14;;:25;;;;:::i;:::-;4144:10;:38;;;;4193:37;4210:11;4223:6;4193:16;:37::i;:::-;4273:11;4245:59;;4261:10;4245:59;;;4286:9;4297:6;4245:59;;;;;;;;;;;;;;;;;;;;;;;;4315:46;4338:11;4351:9;4315:22;:46::i;:::-;4372:15;:13;:15::i;:::-;4397:45;4419:11;4432:9;4397:21;:45::i;:::-;1148:1:68;;1183:13;;1167:12;:29;1159:38;;;;;;;;3846:603:7;;:::o;1822:156:18:-;1864:4;1959:12;;1941:15;:30;1934:37;;1822:156;:::o;3366:75:7:-;3403:7;3429:5;;3422:12;;3366:75;:::o;1765::10:-;1802:7;1828:5;;1821:12;;1765:75;:::o;3504:85:7:-;3546:7;3572:10;;3565:17;;3504:85;:::o;1469:189:18:-;1508:4;1604:12;;1585:15;:31;;:66;;;;;1639:12;;1620:15;:31;;1585:66;1578:73;;1469:189;:::o;489:165:11:-;559:11;:9;:11::i;:::-;551:20;;;;;;;;589:13;:11;:13::i;:::-;581:22;;;;;;;;614:33;635:11;614:20;:33::i;:::-;489:165;:::o;1295:89:18:-;1339:7;1365:12;;1358:19;;1295:89;:::o;792:183:8:-;838:10;;;;;;;;;;;837:11;829:20;;;;;;;;867:11;:9;:11::i;:::-;859:20;;;;;;;;903:4;890:10;;:17;;;;;;;;;;;;;;;;;;918:15;:13;:15::i;:::-;948:20;;;;;;;;;;792:183::o;3194:87:7:-;3233:15;3267:7;;;;;;;;;;;3260:14;;3194:87;:::o;852:108:9:-;909:7;935:9;:18;945:7;935:18;;;;;;;;;;;;;;;;928:25;;852:108;;;:::o;2273:94:10:-;2317:4;2355:5;;2340:11;:9;:11::i;:::-;:20;;2333:27;;2273:94;:::o;451:214:68:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;657:1:68;641:13;:17;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;451:214:68;:::o;552:82:8:-;594:4;617:10;;;;;;;;;;;610:17;;552:82;:::o;2344:284:7:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;2460:1:7;2453:4;:8;2445:17;;;;;;;;2498:1;2480:20;;:6;:20;;;;2472:29;;;;;;;;2545:1;2519:28;;2527:5;2519:28;;;;2511:37;;;;;;;;2567:4;2559:5;:12;;;;2591:6;2581:7;;:16;;;;;;;;;;;;;;;;;;2616:5;2607:6;;:14;;;;;;;;;;;;;;;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;2344:284:7;;;;:::o;1141:89:18:-;1185:7;1211:12;;1204:19;;1141:89;:::o;1989:161:10:-;2061:11;:9;:11::i;:::-;2053:20;;;;;;;;2092:13;:11;:13::i;:::-;2091:14;2083:23;;;;;;;;2117:7;;;;;;;;;;;:16;;;2134:8;2117:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2117:26:10;;;;1989:161;:::o;718:358:18:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;816:31:18;:29;:31::i;:::-;809:39;;;;;;936:15;921:11;:30;;913:39;;;;;;;;984:11;970;:25;962:34;;;;;;;;1022:11;1007:12;:26;;;;1058:11;1043:12;:26;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;718:358:18;;;:::o;3042:76:7:-;3080:6;3105;;;;;;;;;;;3098:13;;3042:76;:::o;1215:468:10:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1343:36:10;:34;:36::i;:::-;1336:44;;;;;;1406:1;1399:4;:8;1391:17;;;;;;;;1541:1;1513:30;;1521:7;;;;;;;;;;;1513:30;;;1509:146;;;1569:18;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1569:18:10;1559:7;;:28;;;;;;;;;;;;;;;;;;1601:7;;;;;;;;;;;:18;;;1620:8;:6;:8::i;:::-;1638:4;1601:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1601:43:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1601:43:10;;;;1509:146;1672:4;1664:5;:12;;;;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;1215:468:10;;:::o;2302:165:18:-;503:8;:6;:8::i;:::-;495:17;;;;;;;;2410:50;2437:11;2450:9;2410:26;:50::i;:::-;2302:165;;:::o;7249:120:7:-;7316:7;7342:20;7356:5;;7342:9;:13;;:20;;;;:::i;:::-;7335:27;;7249:120;;;:::o;1431:145:33:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;1164:158:9:-;1276:39;1303:11;1276:9;:22;1286:11;1276:22;;;;;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;1251:9;:22;1261:11;1251:22;;;;;;;;;;;;;;;:64;;;;1164:158;;:::o;6855:145:7:-;;;:::o;2794:95:10:-;2838:7;;;;;;;;;;;:15;;;2860:9;2871:10;2838:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2838:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2838:44:10;;;;;2794:95::o;5619:149:7:-;;;:::o;540:248:9:-;610:11;:9;:11::i;:::-;602:20;;;;;;;;632:14;649:9;:22;659:11;649:22;;;;;;;;;;;;;;;;632:39;;698:1;689:6;:10;681:19;;;;;;;;735:1;710:9;:22;720:11;710:22;;;;;;;;;;;;;;;:26;;;;746:35;761:11;774:6;746:14;:35::i;:::-;540:248;;:::o;2460:238:10:-;2508:13;:11;:13::i;:::-;2504:156;;;2537:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2537:15:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2537:15:10;;;;2566:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2566:29:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2566:29:10;;;;2504:156;;;2626:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2626:23:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2626:23:10;;;;2504:156;2670:21;:19;:21::i;:::-;2460:238::o;1349:467:69:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;4455:159:7:-;4509:4;4542:1;4534:5;;:9;4533:38;;;;;4568:1;4549:21;;:7;;;;;;;;;;;:21;;;;4533:38;:73;;;;;4603:1;4576:29;;4584:6;;;;;;;;;;;4576:29;;;;4533:73;4525:82;;4455:159;:::o;1984:126:18:-;2038:4;2078:1;2063:12;;:16;2062:40;;;;;2100:1;2085:12;;:16;2062:40;2054:49;;1984:126;:::o;5156:168:7:-;5281:1;5258:25;;:11;:25;;;;5250:34;;;;;;;;5315:1;5302:9;:14;;5294:23;;;;;;;;5156:168;;:::o;229:421:33:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o;6048:137:7:-;6133:45;6153:11;6166;6133:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6048:137;;:::o;1184:98:8:-;:::o;409:123:48:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:48;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:48;;;;;;;;;;;;;;;;491:34;;;;;;;;409:123;;;:::o;381:311:11:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\n\nimport \"./RefundableCrowdsale.sol\";\nimport \"./PostDeliveryCrowdsale.sol\";\n\n/**\n * @title RefundablePostDeliveryCrowdsale\n * @dev Extension of RefundableCrowdsale contract that only delivers the tokens\n * once the crowdsale has closed and the goal met, preventing refunds to be issued\n * to token holders.\n */\ncontract RefundablePostDeliveryCrowdsale is Initializable, RefundableCrowdsale, PostDeliveryCrowdsale {\n    function withdrawTokens(address beneficiary) public {\n        require(finalized());\n        require(goalReached());\n\n        super.withdrawTokens(beneficiary);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/RefundablePostDeliveryCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/RefundablePostDeliveryCrowdsale.sol",
    "exportedSymbols": {
      "RefundablePostDeliveryCrowdsale": [
        1461
      ]
    },
    "id": 1462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1425,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1426,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 8038,
        "src": "25:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "./RefundableCrowdsale.sol",
        "id": 1427,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 1424,
        "src": "72:35:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "./PostDeliveryCrowdsale.sol",
        "id": 1428,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 1266,
        "src": "108:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1429,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "425:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1430,
            "nodeType": "InheritanceSpecifier",
            "src": "425:13:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1431,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1423,
              "src": "440:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1432,
            "nodeType": "InheritanceSpecifier",
            "src": "440:19:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1433,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1265,
              "src": "461:21:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$1265",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 1434,
            "nodeType": "InheritanceSpecifier",
            "src": "461:21:11"
          }
        ],
        "contractDependencies": [
          1122,
          1179,
          1265,
          1423,
          2168,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title RefundablePostDeliveryCrowdsale\n@dev Extension of RefundableCrowdsale contract that only delivers the tokens\nonce the crowdsale has closed and the goal met, preventing refunds to be issued\nto token holders.",
        "fullyImplemented": true,
        "id": 1461,
        "linearizedBaseContracts": [
          1461,
          1265,
          1423,
          1179,
          2168,
          1122,
          7981,
          8037
        ],
        "name": "RefundablePostDeliveryCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1455,
              "nodeType": "Block",
              "src": "541:113:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1440,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "559:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "559:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "551:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "551:20:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1445,
                          "name": "goalReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "589:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "589:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "581:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "581:22:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1452,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "635:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8108,
                        "src": "614:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RefundablePostDeliveryCrowdsale_$1461",
                          "typeString": "contract super RefundablePostDeliveryCrowdsale"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1229,
                      "src": "614:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "614:33:11"
                }
              ]
            },
            "documentation": null,
            "id": 1456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "513:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:21:11"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:11"
            },
            "scope": 1461,
            "src": "489:165:11",
            "stateMutability": "nonpayable",
            "superFunction": 1229,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1460,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1461,
            "src": "660:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1457,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "660:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1459,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1458,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "668:2:11",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "660:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1462,
        "src": "381:311:11"
      }
    ],
    "src": "0:693:11"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/RefundablePostDeliveryCrowdsale.sol",
    "exportedSymbols": {
      "RefundablePostDeliveryCrowdsale": [
        1461
      ]
    },
    "id": 1462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1425,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1426,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 8038,
        "src": "25:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "./RefundableCrowdsale.sol",
        "id": 1427,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 1424,
        "src": "72:35:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol",
        "file": "./PostDeliveryCrowdsale.sol",
        "id": 1428,
        "nodeType": "ImportDirective",
        "scope": 1462,
        "sourceUnit": 1266,
        "src": "108:37:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1429,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "425:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 1430,
            "nodeType": "InheritanceSpecifier",
            "src": "425:13:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1431,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1423,
              "src": "440:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 1432,
            "nodeType": "InheritanceSpecifier",
            "src": "440:19:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1433,
              "name": "PostDeliveryCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1265,
              "src": "461:21:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PostDeliveryCrowdsale_$1265",
                "typeString": "contract PostDeliveryCrowdsale"
              }
            },
            "id": 1434,
            "nodeType": "InheritanceSpecifier",
            "src": "461:21:11"
          }
        ],
        "contractDependencies": [
          1122,
          1179,
          1265,
          1423,
          2168,
          7981,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title RefundablePostDeliveryCrowdsale\n@dev Extension of RefundableCrowdsale contract that only delivers the tokens\nonce the crowdsale has closed and the goal met, preventing refunds to be issued\nto token holders.",
        "fullyImplemented": true,
        "id": 1461,
        "linearizedBaseContracts": [
          1461,
          1265,
          1423,
          1179,
          2168,
          1122,
          7981,
          8037
        ],
        "name": "RefundablePostDeliveryCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1455,
              "nodeType": "Block",
              "src": "541:113:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1440,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "559:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "559:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "551:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1443,
                  "nodeType": "ExpressionStatement",
                  "src": "551:20:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1445,
                          "name": "goalReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "589:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "589:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "581:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "581:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "581:22:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1452,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "635:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1449,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8108,
                        "src": "614:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RefundablePostDeliveryCrowdsale_$1461",
                          "typeString": "contract super RefundablePostDeliveryCrowdsale"
                        }
                      },
                      "id": 1451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1229,
                      "src": "614:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1454,
                  "nodeType": "ExpressionStatement",
                  "src": "614:33:11"
                }
              ]
            },
            "documentation": null,
            "id": 1456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1456,
                  "src": "513:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:21:11"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:11"
            },
            "scope": 1461,
            "src": "489:165:11",
            "stateMutability": "nonpayable",
            "superFunction": 1229,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1460,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1461,
            "src": "660:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1457,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "660:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1459,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1458,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "668:2:11",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "660:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1462,
        "src": "381:311:11"
      }
    ],
    "src": "0:693:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-29T05:33:36.335Z",
  "devdoc": {
    "details": "Extension of RefundableCrowdsale contract that only delivers the tokens once the crowdsale has closed and the goal met, preventing refunds to be issued to token holders.",
    "methods": {
      "balanceOf(address)": {
        "return": "the balance of an account."
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "initialize(uint256)": {
        "details": "Constructor, creates RefundEscrow.",
        "params": {
          "goal": "Funding goal"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "initialize(uint256,uint256)": {
        "details": "Constructor, takes crowdsale opening and closing times.",
        "params": {
          "closingTime": "Crowdsale closing time",
          "openingTime": "Crowdsale opening time"
        }
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "RefundablePostDeliveryCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}