{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "450:117:54:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:117:54;;;;;;;",
  "deployedSourceMap": "450:117:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:131:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;856:131:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:83:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1279:83:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:151:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:151:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3944:151:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3367:292:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3367:292:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:94:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2273:94:53;;;;;;;;;;;;;;;;;;;;;;;5499:180:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5499:180:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5499:180:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:182:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1939:182:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1939:182:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6318:132:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6318:132:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6318:132:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:321:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:321:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;727:321:56;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:56;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:56;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:56;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:56;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:56;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:56;;;;;;;;;;;;;;;;;;2704:148:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2704:148:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2704:148:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:177:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:177:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:177:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2395:150:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2395:150:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:233:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:233:53;;;;;;1470:87:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:87:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1470:87:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4387:213:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4387:213:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4387:213:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:211;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7155:211:51;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7155:211:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7155:211:51;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7155:211:51;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7155:211:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7155:211:51;;;;;;;;;;;;;;;;;;1756:151:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:151:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1756:151:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1756:151:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4921:145:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4921:145:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4921:145:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:28;924:4;947:20;:33;968:11;947:33;;;;;;;;;;;;;;;;;;;;;;;;;;;940:40;;856:131;;;:::o;1279:83:56:-;1318:13;1350:5;1343:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83;:::o;3944:151:51:-;4003:7;4030:16;4038:7;4030;:16::i;:::-;4022:25;;;;;;;;4064:15;:24;4080:7;4064:24;;;;;;;;;;;;;;;;;;;;;4057:31;;3944:151;;;:::o;3367:292::-;3430:13;3446:16;3454:7;3446;:16::i;:::-;3430:32;;3486:5;3480:11;;:2;:11;;;;3472:20;;;;;;;;3524:5;3510:19;;:10;:19;;;:58;;;;3533:35;3550:5;3557:10;3533:16;:35::i;:::-;3510:58;3502:67;;;;;;;;3607:2;3580:15;:24;3596:7;3580:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3644:7;3640:2;3624:28;;3633:5;3624:28;;;;;;;;;;;;3367:292;;;:::o;2273:94:53:-;2317:7;2343:10;:17;;;;2336:24;;2273:94;:::o;5499:180:51:-;5589:39;5608:10;5620:7;5589:18;:39::i;:::-;5581:48;;;;;;;;5640:32;5654:4;5660:2;5664:7;5640:13;:32::i;:::-;5499:180;;;:::o;1939:182:53:-;2019:7;2054:16;2064:5;2054:9;:16::i;:::-;2046:5;:24;2038:33;;;;;;;;2088:12;:19;2101:5;2088:19;;;;;;;;;;;;;;;2108:5;2088:26;;;;;;;;;;;;;;;;;;2081:33;;1939:182;;;;:::o;6318:132:51:-;6404:39;6421:4;6427:2;6431:7;6404:39;;;;;;;;;;;;;:16;:39::i;:::-;6318:132;;;:::o;727:321:56:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;826:28:56;:26;:28::i;:::-;818:37;;;;;;;;874:4;866:5;:12;;;;;;;;;;;;:::i;:::-;;898:6;888:7;:16;;;;;;;;;;;;:::i;:::-;;992:49;489:10;1011:29;;992:18;:49::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;727:321:56;;;:::o;2704:148:53:-;2762:7;2797:13;:11;:13::i;:::-;2789:5;:21;2781:30;;;;;;;;2828:10;2839:5;2828:17;;;;;;;;;;;;;;;;;;2821:24;;2704:148;;;:::o;2769:177:51:-;2824:7;2843:13;2859:11;:20;2871:7;2859:20;;;;;;;;;;;;;;;;;;;;;2843:36;;2914:1;2897:19;;:5;:19;;;;2889:28;;;;;;;;2934:5;2927:12;;;2769:177;;;:::o;2395:150::-;2450:7;2494:1;2477:19;;:5;:19;;;;2469:28;;;;;;;;2514:17;:24;2532:5;2514:24;;;;;;;;;;;;;;;;2507:31;;2395:150;;;:::o;1193:233:53:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1252:28:53;:26;:28::i;:::-;1244:37;;;;;;;;1368:51;916:10;1387:31;;1368:18;:51::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;1193:233:53;:::o;1470:87:56:-;1511:13;1543:7;1536:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:87;:::o;4387:213:51:-;4472:10;4466:16;;:2;:16;;;;4458:25;;;;;;;;4530:8;4493:18;:30;4512:10;4493:30;;;;;;;;;;;;;;;:34;4524:2;4493:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4580:2;4553:40;;4568:10;4553:40;;;4584:8;4553:40;;;;;;;;;;;;;;;;;;;;;;4387:213;;:::o;7155:211::-;7261:31;7274:4;7280:2;7284:7;7261:12;:31::i;:::-;7310:48;7333:4;7339:2;7343:7;7352:5;7310:22;:48::i;:::-;7302:57;;;;;;;;7155:211;;;;:::o;1756:151:56:-;1814:13;1847:16;1855:7;1847;:16::i;:::-;1839:25;;;;;;;;1881:10;:19;1892:7;1881:19;;;;;;;;;;;1874:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:151;;;:::o;4921:145:51:-;5001:4;5024:18;:25;5043:5;5024:25;;;;;;;;;;;;;;;:35;5050:8;5024:35;;;;;;;;;;;;;;;;;;;;;;;;;5017:42;;4921:145;;;;:::o;7555:152::-;7612:4;7628:13;7644:11;:20;7656:7;7644:20;;;;;;;;;;;;;;;;;;;;;7628:36;;7698:1;7681:19;;:5;:19;;;;7674:26;;;7555:152;;;:::o;8070:246::-;8155:4;8171:13;8187:16;8195:7;8187;:16::i;:::-;8171:32;;8232:5;8221:16;;:7;:16;;;:51;;;;8265:7;8241:31;;:20;8253:7;8241:11;:20::i;:::-;:31;;;8221:51;:87;;;;8276:32;8293:5;8300:7;8276:16;:32::i;:::-;8221:87;8213:96;;;8070:246;;;;:::o;3226:239:53:-;3311:38;3331:4;3337:2;3341:7;3311:19;:38::i;:::-;3360:47;3393:4;3399:7;3360:32;:47::i;:::-;3418:40;3446:2;3450:7;3418:27;:40::i;:::-;3226:239;;;:::o;1349:467:69:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;2069:123:51:-;2123:4;2146:39;1224:10;2164:20;;2146:17;:39::i;:::-;2139:46;;2069:123;:::o;1066:158:28:-;1156:10;1141:25;;:11;:25;;;;;1133:34;;;;;;;;1213:4;1177:20;:33;1198:11;1177:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1066:158;:::o;10983:347:51:-;11104:4;11129:15;:2;:13;;;:15::i;:::-;11128:16;11124:58;;;11167:4;11160:11;;;;11124:58;11192:13;11224:2;11208:36;;;11245:10;11257:4;11263:7;11272:5;11208:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11208:70:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11208:70:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11208:70:51;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11208:70:51;;;;;;;;;;;;;;;;11192:86;;719:10;11306:16;;11296:26;;;:6;:26;;;;11288:35;;;10983:347;;;;;;;:::o;10058:402::-;10171:4;10151:24;;:16;10159:7;10151;:16::i;:::-;:24;;;10143:33;;;;;;;;10208:1;10194:16;;:2;:16;;;;10186:25;;;;;;;;10222:23;10237:7;10222:14;:23::i;:::-;10282:30;10310:1;10282:17;:23;10300:4;10282:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10256:17;:23;10274:4;10256:23;;;;;;;;;;;;;;;:56;;;;10346:28;10372:1;10346:17;:21;10364:2;10346:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10322:17;:21;10340:2;10322:21;;;;;;;;;;;;;;;:52;;;;10408:2;10385:11;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10058:402;;;:::o;6328:1128:53:-;6590:22;6615:32;6645:1;6615:12;:18;6628:4;6615:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6590:57;;6657:18;6678:17;:26;6696:7;6678:26;;;;;;;;;;;;6657:47;;6822:14;6808:10;:28;;6804:323;;;6852:19;6874:12;:18;6887:4;6874:18;;;;;;;;;;;;;;;6893:14;6874:34;;;;;;;;;;;;;;;;;;6852:56;;6956:11;6923:12;:18;6936:4;6923:18;;;;;;;;;;;;;;;6942:10;6923:30;;;;;;;;;;;;;;;;;:44;;;;7072:10;7039:17;:30;7057:11;7039:30;;;;;;;;;;;:43;;;;6804:323;;7213:12;:18;7226:4;7213:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6328:1128;;;;:::o;5174:183::-;5287:12;:16;5300:2;5287:16;;;;;;;;;;;;;;;:23;;;;5258:17;:26;5276:7;5258:26;;;;;;;;;;;:52;;;;5320:12;:16;5333:2;5320:16;;;;;;;;;;;;;;;5342:7;5320:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5320:30:53;;;;;;;;;;;;;;;;;;;;;;5174:183;;:::o;463:616:66:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;11491:171:51:-;11590:1;11554:38;;:15;:24;11570:7;11554:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11550:106;;;11643:1;11608:15;:24;11624:7;11608:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11550:106;11491:171;:::o;1205:145:33:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1431:::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;450:117:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n */\ncontract ERC721Full is Initializable, ERC721, ERC721Enumerable, ERC721Metadata {\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        7128
      ]
    },
    "id": 7129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7111,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7112,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 8038,
        "src": "25:45:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7113,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 6719,
        "src": "71:22:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 7114,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 7110,
        "src": "94:32:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7115,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 7312,
        "src": "127:30:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7116,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "473:13:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 7117,
            "nodeType": "InheritanceSpecifier",
            "src": "473:13:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7118,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6718,
              "src": "488:6:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6718",
                "typeString": "contract ERC721"
              }
            },
            "id": 7119,
            "nodeType": "InheritanceSpecifier",
            "src": "488:6:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7120,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7109,
              "src": "496:16:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7109",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 7121,
            "nodeType": "InheritanceSpecifier",
            "src": "496:16:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7122,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7311,
              "src": "514:14:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7311",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7123,
            "nodeType": "InheritanceSpecifier",
            "src": "514:14:54"
          }
        ],
        "contractDependencies": [
          3467,
          3614,
          6718,
          7109,
          7311,
          7632,
          7662,
          7703,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 7128,
        "linearizedBaseContracts": [
          7128,
          7311,
          7703,
          7109,
          7662,
          6718,
          7632,
          3467,
          3614,
          8037
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7127,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7128,
            "src": "535:29:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7124,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7126,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7125,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "543:2:54",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "535:11:54",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7129,
        "src": "450:117:54"
      }
    ],
    "src": "0:568:54"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        7128
      ]
    },
    "id": 7129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7111,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7112,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 8038,
        "src": "25:45:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7113,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 6719,
        "src": "71:22:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 7114,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 7110,
        "src": "94:32:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7115,
        "nodeType": "ImportDirective",
        "scope": 7129,
        "sourceUnit": 7312,
        "src": "127:30:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7116,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "473:13:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 7117,
            "nodeType": "InheritanceSpecifier",
            "src": "473:13:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7118,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6718,
              "src": "488:6:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6718",
                "typeString": "contract ERC721"
              }
            },
            "id": 7119,
            "nodeType": "InheritanceSpecifier",
            "src": "488:6:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7120,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7109,
              "src": "496:16:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7109",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 7121,
            "nodeType": "InheritanceSpecifier",
            "src": "496:16:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7122,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7311,
              "src": "514:14:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7311",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7123,
            "nodeType": "InheritanceSpecifier",
            "src": "514:14:54"
          }
        ],
        "contractDependencies": [
          3467,
          3614,
          6718,
          7109,
          7311,
          7632,
          7662,
          7703,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "fullyImplemented": true,
        "id": 7128,
        "linearizedBaseContracts": [
          7128,
          7311,
          7703,
          7109,
          7662,
          6718,
          7632,
          3467,
          3614,
          8037
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7127,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7128,
            "src": "535:29:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7124,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7126,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7125,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "543:2:54",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "535:11:54",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7129,
        "src": "450:117:54"
      }
    ],
    "src": "0:568:54"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-29T05:33:36.373Z",
  "devdoc": {
    "details": "see https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}