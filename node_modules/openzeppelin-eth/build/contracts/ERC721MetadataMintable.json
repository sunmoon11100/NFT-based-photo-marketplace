{
  "contractName": "ERC721MetadataMintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "232:840:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:840:57;;;;;;;",
  "deployedSourceMap": "232:840:57:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;856:131:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;856:131:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1279:83:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1279:83:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:151:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3944:151:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3944:151:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3367:292:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3367:292:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5499:180:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5499:180:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6318:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6318:132:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6318:132:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:321:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:321:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;727:321:56;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:56;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:56;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:56;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;727:321:56;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;727:321:56;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;727:321:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;727:321:56;;;;;;;;;;;;;;;;;;825:209:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:209:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:209:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;825:209:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;825:209:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;825:209:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;825:209:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:177:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2769:177:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2769:177:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2395:150:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2395:150:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:205;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1858:205:51;;;;;;1470:87:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:87:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1470:87:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:2;;;;;;;;;;;;;;;;;;;;;;742:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:2;;;;;;4387:213:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4387:213:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4387:213:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7155:211:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7155:211:51;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7155:211:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7155:211:51;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7155:211:51;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7155:211:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7155:211:51;;;;;;;;;;;;;;;;;;323:203:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:203:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;323:203:57;;;;;;;;;;;;;;;;;;;;;;1756:151:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:151:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1756:151:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1756:151:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4921:145:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4921:145:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4921:145:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:131:28;924:4;947:20;:33;968:11;947:33;;;;;;;;;;;;;;;;;;;;;;;;;;;940:40;;856:131;;;:::o;1279:83:56:-;1318:13;1350:5;1343:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83;:::o;3944:151:51:-;4003:7;4030:16;4038:7;4030;:16::i;:::-;4022:25;;;;;;;;4064:15;:24;4080:7;4064:24;;;;;;;;;;;;;;;;;;;;;4057:31;;3944:151;;;:::o;3367:292::-;3430:13;3446:16;3454:7;3446;:16::i;:::-;3430:32;;3486:5;3480:11;;:2;:11;;;;3472:20;;;;;;;;3524:5;3510:19;;:10;:19;;;:58;;;;3533:35;3550:5;3557:10;3533:16;:35::i;:::-;3510:58;3502:67;;;;;;;;3607:2;3580:15;:24;3596:7;3580:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3644:7;3640:2;3624:28;;3633:5;3624:28;;;;;;;;;;;;3367:292;;;:::o;5499:180::-;5589:39;5608:10;5620:7;5589:18;:39::i;:::-;5581:48;;;;;;;;5640:32;5654:4;5660:2;5664:7;5640:13;:32::i;:::-;5499:180;;;:::o;6318:132::-;6404:39;6421:4;6427:2;6431:7;6404:39;;;;;;;;;;;;;:16;:39::i;:::-;6318:132;;;:::o;727:321:56:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;826:28:56;:26;:28::i;:::-;818:37;;;;;;;;874:4;866:5;:12;;;;;;;;;;;;:::i;:::-;;898:6;888:7;:16;;;;;;;;;;;;:::i;:::-;;992:49;489:10;1011:29;;992:18;:49::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;727:321:56;;;:::o;825:209:57:-;931:4;488:20:2;497:10;488:8;:20::i;:::-;480:29;;;;;;;;947:18:57;953:2;957:7;947:5;:18::i;:::-;975:31;988:7;997:8;975:12;:31::i;:::-;1023:4;1016:11;;825:209;;;;;:::o;2769:177:51:-;2824:7;2843:13;2859:11;:20;2871:7;2859:20;;;;;;;;;;;;;;;;;;;;;2843:36;;2914:1;2897:19;;:5;:19;;;;2889:28;;;;;;;;2934:5;2927:12;;;2769:177;;;:::o;2395:150::-;2450:7;2494:1;2477:19;;:5;:19;;;;2469:28;;;;;;;;2514:17;:24;2532:5;2514:24;;;;;;;;;;;;;;;;2507:31;;2395:150;;;:::o;1858:205::-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1909:19:51;:17;:19::i;:::-;2016:40;1224:10;2035:20;;2016:18;:40::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;1858:205:51;:::o;1470:87:56:-;1511:13;1543:7;1536:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:87;:::o;646:90:2:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;4387:213:51:-;4472:10;4466:16;;:2;:16;;;;4458:25;;;;;;;;4530:8;4493:18;:30;4512:10;4493:30;;;;;;;;;;;;;;;:34;4524:2;4493:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4580:2;4553:40;;4568:10;4553:40;;;4584:8;4553:40;;;;;;;;;;;;;;;;;;;;;;4387:213;;:::o;533:107:2:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;7155:211:51:-;7261:31;7274:4;7280:2;7284:7;7261:12;:31::i;:::-;7310:48;7333:4;7339:2;7343:7;7352:5;7310:22;:48::i;:::-;7302:57;;;;;;;;7155:211;;;;:::o;323:203:57:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;396:28:57;:26;:28::i;:::-;388:37;;;;;;;;443:36;:34;:36::i;:::-;435:45;;;;;;;;490:29;512:6;490:21;:29::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;323:203:57;;:::o;1756:151:56:-;1814:13;1847:16;1855:7;1847;:16::i;:::-;1839:25;;;;;;;;1881:10;:19;1892:7;1881:19;;;;;;;;;;;1874:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:151;;;:::o;4921:145:51:-;5001:4;5024:18;:25;5043:5;5024:25;;;;;;;;;;;;;;;:35;5050:8;5024:35;;;;;;;;;;;;;;;;;;;;;;;;;5017:42;;4921:145;;;;:::o;7555:152::-;7612:4;7628:13;7644:11;:20;7656:7;7644:20;;;;;;;;;;;;;;;;;;;;;7628:36;;7698:1;7681:19;;:5;:19;;;;7674:26;;;7555:152;;;:::o;8070:246::-;8155:4;8171:13;8187:16;8195:7;8187;:16::i;:::-;8171:32;;8232:5;8221:16;;:7;:16;;;:51;;;;8265:7;8241:31;;:20;8253:7;8241:11;:20::i;:::-;:31;;;8221:51;:87;;;;8276:32;8293:5;8300:7;8276:16;:32::i;:::-;8221:87;8213:96;;;8070:246;;;;:::o;10058:402::-;10171:4;10151:24;;:16;10159:7;10151;:16::i;:::-;:24;;;10143:33;;;;;;;;10208:1;10194:16;;:2;:16;;;;10186:25;;;;;;;;10222:23;10237:7;10222:14;:23::i;:::-;10282:30;10310:1;10282:17;:23;10300:4;10282:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10256:17;:23;10274:4;10256:23;;;;;;;;;;;;;;;:56;;;;10346:28;10372:1;10346:17;:21;10364:2;10346:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10322:17;:21;10340:2;10322:21;;;;;;;;;;;;;;;:52;;;;10408:2;10385:11;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10058:402;;;:::o;1349:467:69:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;2069:123:51:-;2123:4;2146:39;1224:10;2164:20;;2146:17;:39::i;:::-;2139:46;;2069:123;:::o;1066:158:28:-;1156:10;1141:25;;:11;:25;;;;;1133:34;;;;;;;;1213:4;1177:20;:33;1198:11;1177:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1066:158;:::o;8559:278:51:-;8644:1;8630:16;;:2;:16;;;;8622:25;;;;;;;;8666:16;8674:7;8666;:16::i;:::-;8665:17;8657:26;;;;;;;;8717:2;8694:11;:20;8706:7;8694:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8753:28;8779:1;8753:17;:21;8771:2;8753:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;8729:17;:21;8747:2;8729:21;;;;;;;;;;;;;;;:52;;;;8822:7;8818:2;8797:33;;8814:1;8797:33;;;;;;;;;;;;8559:278;;:::o;2144:144:56:-;2229:16;2237:7;2229;:16::i;:::-;2221:25;;;;;;;;2278:3;2256:10;:19;2267:7;2256:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2144:144;;:::o;667:98:28:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;718:40:28;297:10;737:20;;718:18;:40::i;:::-;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;667:98:28;:::o;823:119:2:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;948:127::-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;786:162:0:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;10983:347:51:-;11104:4;11129:15;:2;:13;;;:15::i;:::-;11128:16;11124:58;;;11167:4;11160:11;;;;11124:58;11192:13;11224:2;11208:36;;;11245:10;11257:4;11263:7;11272:5;11208:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11208:70:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11208:70:51;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11208:70:51;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11208:70:51;;;;;;;;;;;;;;;;11192:86;;719:10;11306:16;;11296:26;;;:6;:26;;;;11288:35;;;10983:347;;;;;;;:::o;1052:124:56:-;1106:4;1125:48;489:10;1143:29;;1125:17;:48::i;:::-;1118:55;;1052:124;:::o;305:137:2:-;1024:12:69;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:2;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:69;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:2;;:::o;11491:171:51:-;11590:1;11554:38;;:15;:24;11570:7;11554:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11550:106;;;11643:1;11608:15;:24;11624:7;11608:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11550:106;11491:171;:::o;1205:145:33:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;1431:::-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;259:181:0:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;463:616:66:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;232:840:57:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n\n/**\n * @title ERC721MetadataMintable\n * @dev ERC721 minting logic with metadata\n */\ncontract ERC721MetadataMintable is Initializable, ERC721, ERC721Metadata, MinterRole {\n    function initialize(address sender) public initializer {\n        require(ERC721._hasBeenInitialized());\n        require(ERC721Metadata._hasBeenInitialized());\n        MinterRole.initialize(sender);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param tokenId The token id to mint.\n     * @param tokenURI The token URI of the minted token.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mintWithTokenURI(address to, uint256 tokenId, string memory tokenURI) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721MetadataMintable.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        7381
      ]
    },
    "id": 7382,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7313,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7314,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 8038,
        "src": "25:45:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7315,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 7312,
        "src": "71:30:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 7316,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 332,
        "src": "102:43:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7317,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "267:13:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 7318,
            "nodeType": "InheritanceSpecifier",
            "src": "267:13:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7319,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6718,
              "src": "282:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6718",
                "typeString": "contract ERC721"
              }
            },
            "id": 7320,
            "nodeType": "InheritanceSpecifier",
            "src": "282:6:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7321,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7311,
              "src": "290:14:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7311",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7322,
            "nodeType": "InheritanceSpecifier",
            "src": "290:14:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7323,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 331,
              "src": "306:10:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$331",
                "typeString": "contract MinterRole"
              }
            },
            "id": 7324,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:57"
          }
        ],
        "contractDependencies": [
          331,
          3467,
          3614,
          6718,
          7311,
          7632,
          7703,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\n@dev ERC721 minting logic with metadata",
        "fullyImplemented": true,
        "id": 7381,
        "linearizedBaseContracts": [
          7381,
          331,
          7311,
          7703,
          6718,
          7632,
          3467,
          3614,
          8037
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7349,
              "nodeType": "Block",
              "src": "378:148:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7332,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6718,
                            "src": "396:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$6718_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 7333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6204,
                          "src": "396:26:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 7334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "396:28:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "388:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:37:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7336,
                  "nodeType": "ExpressionStatement",
                  "src": "388:37:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7338,
                            "name": "ERC721Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7311,
                            "src": "443:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$7311_$",
                              "typeString": "type(contract ERC721Metadata)"
                            }
                          },
                          "id": 7339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7222,
                          "src": "443:34:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 7340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:36:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "435:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:45:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7342,
                  "nodeType": "ExpressionStatement",
                  "src": "435:45:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7346,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7326,
                        "src": "512:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7343,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "490:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$331_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 249,
                      "src": "490:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:29:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7348,
                  "nodeType": "ExpressionStatement",
                  "src": "490:29:57"
                }
              ]
            },
            "documentation": null,
            "id": 7350,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7328,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8018,
                  "src": "366:11:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "366:11:57"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7326,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7350,
                  "src": "343:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "342:16:57"
            },
            "returnParameters": {
              "id": 7330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:57"
            },
            "scope": 7381,
            "src": "323:203:57",
            "stateMutability": "nonpayable",
            "superFunction": 249,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7375,
              "nodeType": "Block",
              "src": "937:97:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7364,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7352,
                        "src": "953:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7365,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "957:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7363,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6526,
                      "src": "947:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7367,
                  "nodeType": "ExpressionStatement",
                  "src": "947:18:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7369,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "988:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7370,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7356,
                        "src": "997:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7368,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7276,
                      "src": "975:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 7371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7372,
                  "nodeType": "ExpressionStatement",
                  "src": "975:31:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1023:4:57",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7362,
                  "id": 7374,
                  "nodeType": "Return",
                  "src": "1016:11:57"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@param tokenURI The token URI of the minted token.\n@return A boolean that indicates if the operation was successful.",
            "id": 7376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7359,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7358,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "911:10:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "911:10:57"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7352,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "851:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7354,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "863:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7356,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "880:22:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "850:53:57"
            },
            "returnParameters": {
              "id": 7362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7361,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "931:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:6:57"
            },
            "scope": 7381,
            "src": "825:209:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7380,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7381,
            "src": "1040:29:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7377,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1040:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7379,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7378,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1048:2:57",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1040:11:57",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7382,
        "src": "232:840:57"
      }
    ],
    "src": "0:1073:57"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        7381
      ]
    },
    "id": 7382,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7313,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:57"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7314,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 8038,
        "src": "25:45:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7315,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 7312,
        "src": "71:30:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/zos/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 7316,
        "nodeType": "ImportDirective",
        "scope": 7382,
        "sourceUnit": 332,
        "src": "102:43:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7317,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8037,
              "src": "267:13:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8037",
                "typeString": "contract Initializable"
              }
            },
            "id": 7318,
            "nodeType": "InheritanceSpecifier",
            "src": "267:13:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7319,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6718,
              "src": "282:6:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$6718",
                "typeString": "contract ERC721"
              }
            },
            "id": 7320,
            "nodeType": "InheritanceSpecifier",
            "src": "282:6:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7321,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7311,
              "src": "290:14:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7311",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7322,
            "nodeType": "InheritanceSpecifier",
            "src": "290:14:57"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7323,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 331,
              "src": "306:10:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$331",
                "typeString": "contract MinterRole"
              }
            },
            "id": 7324,
            "nodeType": "InheritanceSpecifier",
            "src": "306:10:57"
          }
        ],
        "contractDependencies": [
          331,
          3467,
          3614,
          6718,
          7311,
          7632,
          7703,
          8037
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\n@dev ERC721 minting logic with metadata",
        "fullyImplemented": true,
        "id": 7381,
        "linearizedBaseContracts": [
          7381,
          331,
          7311,
          7703,
          6718,
          7632,
          3467,
          3614,
          8037
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7349,
              "nodeType": "Block",
              "src": "378:148:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7332,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6718,
                            "src": "396:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$6718_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 7333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6204,
                          "src": "396:26:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 7334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "396:28:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "388:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:37:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7336,
                  "nodeType": "ExpressionStatement",
                  "src": "388:37:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7338,
                            "name": "ERC721Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7311,
                            "src": "443:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$7311_$",
                              "typeString": "type(contract ERC721Metadata)"
                            }
                          },
                          "id": 7339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7222,
                          "src": "443:34:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 7340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:36:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8055,
                        8056
                      ],
                      "referencedDeclaration": 8055,
                      "src": "435:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:45:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7342,
                  "nodeType": "ExpressionStatement",
                  "src": "435:45:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7346,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7326,
                        "src": "512:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7343,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "490:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$331_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 249,
                      "src": "490:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:29:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7348,
                  "nodeType": "ExpressionStatement",
                  "src": "490:29:57"
                }
              ]
            },
            "documentation": null,
            "id": 7350,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7328,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8018,
                  "src": "366:11:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "366:11:57"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7326,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7350,
                  "src": "343:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "342:16:57"
            },
            "returnParameters": {
              "id": 7330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:57"
            },
            "scope": 7381,
            "src": "323:203:57",
            "stateMutability": "nonpayable",
            "superFunction": 249,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7375,
              "nodeType": "Block",
              "src": "937:97:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7364,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7352,
                        "src": "953:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7365,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "957:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7363,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6526,
                      "src": "947:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7367,
                  "nodeType": "ExpressionStatement",
                  "src": "947:18:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7369,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7354,
                        "src": "988:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7370,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7356,
                        "src": "997:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7368,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7276,
                      "src": "975:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 7371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:31:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7372,
                  "nodeType": "ExpressionStatement",
                  "src": "975:31:57"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1023:4:57",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7362,
                  "id": 7374,
                  "nodeType": "Return",
                  "src": "1016:11:57"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@param tokenURI The token URI of the minted token.\n@return A boolean that indicates if the operation was successful.",
            "id": 7376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7359,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7358,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "911:10:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "911:10:57"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7352,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "851:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7354,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "863:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7356,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "880:22:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7355,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "850:53:57"
            },
            "returnParameters": {
              "id": 7362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7361,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7376,
                  "src": "931:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:6:57"
            },
            "scope": 7381,
            "src": "825:209:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7380,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7381,
            "src": "1040:29:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7377,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1040:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7379,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7378,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1048:2:57",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1040:11:57",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7382,
        "src": "232:840:57"
      }
    ],
    "src": "0:1073:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-29T05:33:36.374Z",
  "devdoc": {
    "details": "ERC721 minting logic with metadata",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721MetadataMintable"
  },
  "userdoc": {
    "methods": {}
  }
}