{
  "contractName": "CzStorage",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "testResultOfCalculate",
          "type": "uint256"
        }
      ],
      "name": "TestEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "exampleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "exampleName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "exampleAddr",
          "type": "address"
        }
      ],
      "name": "ExampleEvent",
      "type": "event"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36103ec806100cf6000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610155565b005b34801561008a57600080fd5b50610093610227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610250565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b506101536004803603602081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a7565b005b61015d610250565b151561016857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6102af610250565b15156102ba57600080fd5b6102c3816102c6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561030257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820dd935a2d3bb847c302c4a4c2d41ffb2c16c36bbc95c9dc3b4ebf8bc2766bf6980029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610155565b005b34801561008a57600080fd5b50610093610227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610250565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b506101536004803603602081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a7565b005b61015d610250565b151561016857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6102af610250565b15156102ba57600080fd5b6102c3816102c6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561030257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820dd935a2d3bb847c302c4a4c2d41ffb2c16c36bbc95c9dc3b4ebf8bc2766bf6980029",
  "sourceMap": "221:102:54:-;;;524:10:16;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;221:102:54;;;;;;",
  "deployedSourceMap": "221:102:54:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:137:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:16;;;;;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:16;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:16;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:16;;;;;;;;;;;;;;;;;;;;;;1347:137;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1655:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o",
  "source": "pragma solidity ^0.5.0;\n\n//import \"../openzeppelin-solidity/ReentrancyGuard.sol\";\nimport \"../openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./CzObjects.sol\";\nimport \"./CzEvents.sol\";\n\n\n// shared storage\ncontract CzStorage is CzObjects, CzEvents, Ownable {\n\n    mapping (uint => ExampleObject) examples;\n\n}\n\n",
  "sourcePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzStorage.sol",
  "ast": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzStorage.sol",
    "exportedSymbols": {
      "CzStorage": [
        11204
      ]
    },
    "id": 11205,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11190,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 11191,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 1509,
        "src": "82:66:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzObjects.sol",
        "file": "./CzObjects.sol",
        "id": 11192,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 11189,
        "src": "150:25:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzEvents.sol",
        "file": "./CzEvents.sol",
        "id": 11193,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 11174,
        "src": "176:24:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11194,
              "name": "CzObjects",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11188,
              "src": "243:9:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CzObjects_$11188",
                "typeString": "contract CzObjects"
              }
            },
            "id": 11195,
            "nodeType": "InheritanceSpecifier",
            "src": "243:9:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11196,
              "name": "CzEvents",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11173,
              "src": "254:8:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CzEvents_$11173",
                "typeString": "contract CzEvents"
              }
            },
            "id": 11197,
            "nodeType": "InheritanceSpecifier",
            "src": "254:8:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11198,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1508,
              "src": "264:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1508",
                "typeString": "contract Ownable"
              }
            },
            "id": 11199,
            "nodeType": "InheritanceSpecifier",
            "src": "264:7:54"
          }
        ],
        "contractDependencies": [
          1508,
          11173,
          11188
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11204,
        "linearizedBaseContracts": [
          11204,
          1508,
          11173,
          11188
        ],
        "name": "CzStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11203,
            "name": "examples",
            "nodeType": "VariableDeclaration",
            "scope": 11204,
            "src": "279:40:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExampleObject_$11187_storage_$",
              "typeString": "mapping(uint256 => struct CzObjects.ExampleObject)"
            },
            "typeName": {
              "id": 11202,
              "keyType": {
                "id": 11200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "288:4:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "279:31:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExampleObject_$11187_storage_$",
                "typeString": "mapping(uint256 => struct CzObjects.ExampleObject)"
              },
              "valueType": {
                "contractScope": null,
                "id": 11201,
                "name": "ExampleObject",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11187,
                "src": "296:13:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExampleObject_$11187_storage_ptr",
                  "typeString": "struct CzObjects.ExampleObject"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 11205,
        "src": "221:102:54"
      }
    ],
    "src": "0:325:54"
  },
  "legacyAST": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzStorage.sol",
    "exportedSymbols": {
      "CzStorage": [
        11204
      ]
    },
    "id": 11205,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11190,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:54"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 11191,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 1509,
        "src": "82:66:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzObjects.sol",
        "file": "./CzObjects.sol",
        "id": 11192,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 11189,
        "src": "150:25:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Devcon5_Hackathon/NFT-based-photo-marketplace/contracts/storage/CzEvents.sol",
        "file": "./CzEvents.sol",
        "id": 11193,
        "nodeType": "ImportDirective",
        "scope": 11205,
        "sourceUnit": 11174,
        "src": "176:24:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11194,
              "name": "CzObjects",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11188,
              "src": "243:9:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CzObjects_$11188",
                "typeString": "contract CzObjects"
              }
            },
            "id": 11195,
            "nodeType": "InheritanceSpecifier",
            "src": "243:9:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11196,
              "name": "CzEvents",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11173,
              "src": "254:8:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CzEvents_$11173",
                "typeString": "contract CzEvents"
              }
            },
            "id": 11197,
            "nodeType": "InheritanceSpecifier",
            "src": "254:8:54"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11198,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1508,
              "src": "264:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1508",
                "typeString": "contract Ownable"
              }
            },
            "id": 11199,
            "nodeType": "InheritanceSpecifier",
            "src": "264:7:54"
          }
        ],
        "contractDependencies": [
          1508,
          11173,
          11188
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11204,
        "linearizedBaseContracts": [
          11204,
          1508,
          11173,
          11188
        ],
        "name": "CzStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11203,
            "name": "examples",
            "nodeType": "VariableDeclaration",
            "scope": 11204,
            "src": "279:40:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExampleObject_$11187_storage_$",
              "typeString": "mapping(uint256 => struct CzObjects.ExampleObject)"
            },
            "typeName": {
              "id": 11202,
              "keyType": {
                "id": 11200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "288:4:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "279:31:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExampleObject_$11187_storage_$",
                "typeString": "mapping(uint256 => struct CzObjects.ExampleObject)"
              },
              "valueType": {
                "contractScope": null,
                "id": 11201,
                "name": "ExampleObject",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 11187,
                "src": "296:13:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExampleObject_$11187_storage_ptr",
                  "typeString": "struct CzObjects.ExampleObject"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          }
        ],
        "scope": 11205,
        "src": "221:102:54"
      }
    ],
    "src": "0:325:54"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-09-25T10:48:05.313Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}